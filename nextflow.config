
params {
version	          = '1.0'
outdir            = "results"
nsplit            = 200
help              = null
bwa               = "bwa-mem2"
debug             = false
}


// Preset use of containers with Singularity

singularity {
    enabled		= true
    autoMounts		= true
    }

// Job profiles
profiles {
    kutral {
        singularity.enabled    = true
        singularity.autoMounts = true
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
	process.executor = 'slurm'
	process.queue = 'uohhm'
    }
}

// Fail a task if any command returns non-zero exit code
shell = ['/bin/bash', '-euo', 'pipefail']

// Resources for each process
// default run resource parameters

process {

withName: 'build_bwa_index' {
	cpus    = 1
	memory  = 40.GB
        container = 'camoragaq/ppilon:v1.0'
  }

withName: 'bwa_mapping' {
	cpus    = 44
	memory  = 40.GB
        container = 'camoragaq/ppilon:v1.0'
  }

withName: 'split_contigs' {
	cpus    = 1
	memory  = 10.GB
  }

withName: 'pilon' {
	cpus = 2
	memory = 10.GB
        container = 'camoragaq/ppilon:v1.0'
  }
}

// Define timestamp, to avoid overwriting existing trace
def timestamp = new java.util.Date().format('yyyy-MM-dd_HH-mm-ss')

// Produce a workflow diagram
  dag {
    enabled = true
    file = "${params.outdir}/runInfo/pilon_dag_${timestamp}.svg"
  }

  report {
    enabled = true
    file = "${params.outdir}/runInfo/pilon_report_${timestamp}.html"
  }

  timeline {
    enabled = true
    overwrite = true
    file = "${params.outdir}/runInfo/pilon_timeline_${timestamp}.html"
  }

  trace {
    enabled = true
    overwrite = true
    file = "${params.outdir}/runInfo/pilon_trace_${timestamp}.txt"
    fields = 'process,name,status,queue,realtime,cpus,%cpu,memory,%mem,rss,env'
  }
